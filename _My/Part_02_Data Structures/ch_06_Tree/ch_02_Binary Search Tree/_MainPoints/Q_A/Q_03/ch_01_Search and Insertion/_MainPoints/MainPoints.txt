

========================================
1.- searching :
     how it work ?
     code ?
     o(n) ? 
========================================
#resources
1-https://www.javatpoint.com/searching-in-binary-search-tree
2-https://www.geeksforgeeks.org/binary-search-tree-set-1-search-and-insertion/
3-https://www.geeksforgeeks.org/complexity-analysis-of-binary-search/
4-https://www.geeksforgeeks.org/complexity-different-operations-binary-tree-binary-search-tree-avl-tree/

#average time:
log2(n) = h
where n = number of nodes 
      h = number of levels

#worst time :
the height of a skewed tree :
may become n and the time complexity of search and insert operation may become O(n).
n = h

==========================================
2.- inseration :
     how it work ?
     code ?
     o(n) ? 
==========================================
#q/a --> 1
#resources 
1-https://www.javatpoint.com/insertion-in-binary-search-tree

==========================================
3.
==========================================


==========================================
4.
==========================================


==========================================
5.
==========================================


==========================================
6.
==========================================


==========================================
7.
==========================================


==========================================
8.
==========================================


==========================================
9.
==========================================


==========================================
10.
==========================================

==========================================
11.
==========================================


==========================================
12.
==========================================


==========================================
13.
==========================================